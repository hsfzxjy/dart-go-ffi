// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class LibDgo {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LibDgo(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LibDgo.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dgo_InitGo() {
    return _dgo_InitGo();
  }

  late final _dgo_InitGoPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('dgo_InitGo');
  late final _dgo_InitGo = _dgo_InitGoPtr.asFunction<void Function()>();

  int dgo_InitFFI(
    ffi.Pointer<ffi.Void> data,
    int sendPort,
  ) {
    return _dgo_InitFFI(
      data,
      sendPort,
    );
  }

  late final _dgo_InitFFIPtr = _lookup<
      ffi.NativeFunction<
          Dart_Port_DL Function(
              ffi.Pointer<ffi.Void>, Dart_Port_DL)>>('dgo_InitFFI');
  late final _dgo_InitFFI =
      _dgo_InitFFIPtr.asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();
}

typedef Dart_Port_DL = ffi.Int64;
